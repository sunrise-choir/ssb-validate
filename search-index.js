var searchIndex = JSON.parse('{\
"ssb_validate":{"doc":"Verify Secure Scuttlebutt (SSB) hash chains (in parallel)","t":[0,6,4,13,12,12,13,12,12,13,12,13,12,12,13,12,13,12,13,12,13,12,13,12,13,12,12,12,13,13,12,13,12,12,12,13,13,12,0,5,5,5,5,5,5,0,3,12,12,12,12,12,12,12,5,5,5,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["error","Result","Error","InvalidPreviousMessage","source","message","InvalidMessage","source","message","InvalidMessageValueOrder","message","AuthorsDidNotMatch","previous_author","author","FirstMessageDidNotHaveSequenceOfOne","message","FirstMessageDidNotHavePreviousOfNull","message","InvalidHashFunction","message","InvalidBase64","message","InvalidMessageValueLength","message","InvalidSequenceNumber","message","actual","expected","InvalidMessageNoValue","InvalidMessageCouldNotSerializeValue","source","ActualHashDidNotMatchKey","message","actual_hash","expected_hash","PreviousWasNull","ForkedFeed","previous_seq","message","validate_multi_author_message_hash_chain","par_validate_multi_author_message_hash_chain_of_feed","validate_ooo_message_hash_chain","par_validate_ooo_message_hash_chain_of_feed","par_validate_message_hash_chain_of_feed","validate_message_hash_chain","message_value","SsbMessageValue","previous","author","sequence","timestamp","hash","content","signature","par_validate_message_value_hash_chain_of_feed","validate_message_value_hash_chain","message_value_common_checks","test_data","MESSAGE_1","MESSAGE_VALUE_1","MESSAGE_1_INVALID_SEQ","MESSAGE_1_INVALID_PREVIOUS","MESSAGE_2","MESSAGE_2_INVALID_ORDER","MESSAGE_VALUE_2","MESSAGE_3","MESSAGE_2_PREVIOUS_NULL","MESSAGE_2_INCORRECT_AUTHOR","MESSAGE_2_INCORRECT_SEQUENCE","MESSAGE_2_INCORRECT_KEY","MESSAGE_2_FORK","MESSAGE_WITH_UNICODE","MESSAGE_WITH_UNICODE_PREV","MESSAGE_WITHOUT_HASH_FUNCTION","MESSAGE_WITH_INVALID_HASH_FUNCTION","MESSAGE_WITH_EXTRA_FIELD","MESSAGE_PRIVATE","MESSAGE_PRIVATE_PREV","MESSAGE_PRIVATE_INVALID","utils","is_canonical_base64","is_correct_length","is_correct_order","multihash_from_bytes","node_buffer_binary_serializer","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","as_error_source","vzip","init","deref","deref_mut","drop","from","into","borrow","borrow_mut","try_from","try_into","type_id","vzip","init","deref","deref_mut","drop","fmt","fmt","fmt","description","cause","source","backtrace","serialize","deserialize"],"q":["ssb_validate","ssb_validate::error","","","ssb_validate::error::Error","","ssb_validate::error","ssb_validate::error::Error","","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","","","ssb_validate::error","","ssb_validate::error::Error","ssb_validate::error","ssb_validate::error::Error","","","ssb_validate::error","","ssb_validate::error::Error","ssb_validate","ssb_validate::message","","","","","","ssb_validate","ssb_validate::message_value","","","","","","","","","","","ssb_validate","ssb_validate::test_data","","","","","","","","","","","","","","","","","","","","","ssb_validate","ssb_validate::utils","","","","","ssb_validate::error","","","","","","","","","","","","","","ssb_validate::message_value","","","","","","","","","","","","ssb_validate::error","ssb_validate::message_value","ssb_validate::error","","","","","ssb_validate::message_value",""],"d":["Custom error type with all possible variants for this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Functions for validating messages in the form of <code>KVT</code> (<code>key</code>…","Check that an out-of-order message is valid without …","Batch validates a collection of out-of-order messages by …","Check that an out-of-order message is valid.","Batch validates a collection of out-of-order messages by …","Batch validates a collection of messages, all by the same …","Check that a message is a valid message relative to the …","Functions for validating message values (ie. just the …","Data type representing the <code>value</code> of a message object (<code>KVT</code>…","","","","","","","","Batch validates a collection of message values, <strong>all by …","Check that a message is a valid message relative to the …","Validation checks which are common across all contexts. …","Secure Scuttlebutt messages used for testing.","","","","","","","","","","","","","","","","","","","","","","Helper functions used during validation computations.","Check that the given string represents canonical base64.","Check that the length of the given message - when …","Check that the top-level fields (keys) comprising the …","Generate a hash for a given message value.","FML, scuttlebutt is miserable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,2,1,3,3,1,4,1,5,5,1,6,1,7,1,8,1,9,1,10,1,11,11,11,1,1,12,1,13,13,13,1,1,14,0,0,0,0,0,0,0,0,0,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,15,15,15,15,15,15,15,15,15,15,15,15,1,15,1,1,1,1,1,15,15],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["asref",8]],["result",6]],[[],["result",6]],[[["asref",8],["option",4]],["result",6]],[[],["result",6]],[[["option",4],["asref",8]],["result",6]],[[["asref",8],["option",4]],["result",6]],null,null,null,null,null,null,null,null,null,[[["option",4],["asref",8]],["result",6]],[[["asref",8],["option",4]],["result",6]],[[["option",4],["option",4],["bool",15],["multihash",4],["ssbmessagevalue",3]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]],["bool",15]],[[["ssbmessagevalue",3]],[["bool",15],["result",6]]],[[],["bool",15]],[[],["multihash",4]],[[["str",15]],[["vec",3],["u8",15]]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["error",8]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["str",15]],[[],[["option",4],["error",8]]],[[],[["error",8],["option",4]]],[[],[["backtrace",3],["option",4]]],[[],["result",4]],[[],["result",4]]],"p":[[4,"Error"],[13,"InvalidPreviousMessage"],[13,"InvalidMessage"],[13,"InvalidMessageValueOrder"],[13,"AuthorsDidNotMatch"],[13,"FirstMessageDidNotHaveSequenceOfOne"],[13,"FirstMessageDidNotHavePreviousOfNull"],[13,"InvalidHashFunction"],[13,"InvalidBase64"],[13,"InvalidMessageValueLength"],[13,"InvalidSequenceNumber"],[13,"InvalidMessageCouldNotSerializeValue"],[13,"ActualHashDidNotMatchKey"],[13,"ForkedFeed"],[3,"SsbMessageValue"]]}\
}');
initSearch(searchIndex);